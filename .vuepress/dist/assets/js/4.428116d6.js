(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{180:function(t,e,a){t.exports=a.p+"assets/img/capture-email.e500f5d0.png"},181:function(t,e,a){t.exports=a.p+"assets/img/capture-image.7c107d94.png"},182:function(t,e,a){t.exports=a.p+"assets/img/captured-image-property.11a73317.png"},183:function(t,e,a){t.exports=a.p+"assets/img/user-input-quick-reply-dialog.9c456034.png"},184:function(t,e,a){t.exports=a.p+"assets/img/user-input-reply.2763dae4.png"},185:function(t,e,a){t.exports=a.p+"assets/img/user-input-confirm.846c1e22.png"},238:function(t,e,a){"use strict";a.r(e);var s=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"capture-and-validate-user-input"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#capture-and-validate-user-input","aria-hidden":"true"}},[this._v("#")]),this._v(" Capture and Validate User Input")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[t._v("Text")]),t._v(" "),a("li",[t._v("Number")]),t._v(" "),a("li",[t._v("Date")]),t._v(" "),a("li",[t._v("Image")]),t._v(" "),a("li",[t._v("File (Facebook)")]),t._v(" "),a("li",[t._v("Location")]),t._v(" "),a("li",[t._v("Phone")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:a(180),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:a(181),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Composite types can be accessed in the form of "),e("code",[this._v("args.type.property")]),this._v(", below is a list of composite types and their properties:")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("table",[a("thead",[a("tr",[a("th",[t._v("Type")]),t._v(" "),a("th",[t._v("Property")]),t._v(" "),a("th",[t._v("-")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("image")]),t._v(" "),a("td",[t._v("url")]),t._v(" "),a("td",[t._v("url of the image")])]),t._v(" "),a("tr",[a("td",[t._v("file")]),t._v(" "),a("td",[t._v("url")]),t._v(" "),a("td",[t._v("url of the file")])]),t._v(" "),a("tr",[a("td",[t._v("location")]),t._v(" "),a("td",[t._v("lat, long")]),t._v(" "),a("td",[t._v("latitude and longitude of the location")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:a(182),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("It is also possible to upload multiple files or images. Here in the example above, "),e("code",[this._v("image.0.url")]),this._v(" is the first image at zero index. If you upload two images at the same time, you can access them like "),e("code",[this._v("image.0.url")]),this._v(", "),e("code",[this._v("image.1.url")]),this._v(" and so on. In case, you want to iterate through all the images; you can do so by writing a custom a script or using the template iterator in the following way:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[this._v("{{#image}}\n {{{url}}}\n{{/image}}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Block")]),this._v(" "),e("li",[this._v("User Input")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:a(183),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:a(184),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:a(185),alt:""}}),this._v(".")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("exports"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function-variable function"}},[t._v("handler")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" done"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vars"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("get")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"color"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{attrs:{class:"token function"}},[t._v("done")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])}],n=a(0),i=Object(n.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("Use user input plugin to capture data in your bot.")]),t._v(" "),a("p",[t._v("The following types are supported for an user input:")]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("It is possible to capture user input and set it as a user attribute to create conditional flows.")]),t._v(" "),a("p",[t._v("The plugin can be used to validate a specific type, for example we are validating an email of a subscriber in the following way:")]),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("It is possible to capture input not only as a text but as a composite type (e.g. image), it possible to ask the user to upload an image and then validate and capture it in an attribute. We will have to select the type as an image and specify an attribute to capture the image:")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("Here in this case, we can use the image property in an image element in the following way:")]),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("Note the syntax here with triple braces, In this case, the template engine won't encode the url which is already done by the underlying platform (e.g. Facebook, Viber). Otherwise, it will create an invalid url.")]),t._v(" "),t._m(7),t._v(" "),t._m(8),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("A "),a("a",{attrs:{href:"http://mustache.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("mustache"),a("OutboundLink")],1),t._v(" template is a string that contains any number of mustache tags. Smartloop adopts this most popular template format to process variables. Tags are indicated by the double mustaches that surround them. Here, in the above example triple parenthesis tells the compiler not to encode the url.")]),t._v(" "),a("p",[t._v("Follow the "),a("a",{attrs:{href:"https://gist.github.com/mehfuzh/b18d513b3dc1f2f62d4a10b9bbd33fe1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mustache Cheatsheet"),a("OutboundLink")],1),t._v(" gist to get a better understanding.")])]),t._v(" "),a("p",[t._v("It is also possible to capture user input in the form of a quick reply, from the quick reply content menu we select the following:")]),t._v(" "),t._m(9),t._v(" "),a("p",[t._v('Select "User Input" to capture user input in the form of a quick reply:')]),t._v(" "),t._m(10),t._v(" "),a("p",[t._v("Also, we can use pattern validation to define the scope of an input using a regular expression:")]),t._v(" "),t._m(11),t._v(" "),a("p",[t._v("User input is stored as an attribute and you can print it inside a text element or use in it a different plugin as an input in the following way:")]),t._v(" "),t._m(12),t._v(" "),a("p",[t._v("Attributes are accessed and defined using the double braces syntax. This is a standard template syntax for working with dynamic values.")]),t._v(" "),a("p",[t._v("In a more advanced scenario, you can reference the captured user input from a script block as shown below:")]),t._v(" "),t._m(13),a("p",[t._v("The script block is for implementing custom workflows and designed towards developers.")])])},s,!1,null,null,null);i.options.__file="capturing-user-input.md";e.default=i.exports}}]);